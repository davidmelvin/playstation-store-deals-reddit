package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"os"

	"github.com/mitchellh/mapstructure"
)

func main() {
	jsonFile, err := os.Open("bignextdata.json")

	if err != nil {
		fmt.Println("error opening JSON file: ", err)
	}

	defer jsonFile.Close()

	jsonBytes, err := ioutil.ReadAll(jsonFile)
	if err != nil {
		fmt.Println("error reading JSON bytes: ", err)
	}

	var data AutoGenerated

	json.Unmarshal(jsonBytes, &data)

	fmt.Println(len(data.Props.ApolloState))

	var products []Product

	for _, v := range data.Props.ApolloState {
		apolloStateData, ok := v.(map[string]interface{})
		if !ok {
			fmt.Println("apollo state data is not a map[string]interface{}")
		}
		if apolloStateData["__typename"] == "Product" {
			var product Product
			if err := mapstructure.Decode(apolloStateData, &product); err != nil {
				fmt.Println("could not decode appollo state data as a product")
			}

			products = append(products, product)
		}
	}

	fmt.Printf("there are %d products", len(products))
}
